var e=(e,{services:s})=>{const{ItemsService:t}=s;e.get("/:id",(async(e,s)=>{try{const{id:a}=e.params;if(!a||isNaN(a))return s.status(400).json({message:"id is required"});new t("investors",{schema:e.schema,accountability:e.accountability}).readByQuery({fileds:["*"],filter:{id:a}}).then((e=>{if(!e.length)return s.status(404).json({message:"investor not found"});if(e.length>1)return s.status(400).json({message:"multiple investors found with same id"});let t=e[0];return s.json({message:"success",data:{id:t.id,name:t.name,wallet_balance:t.wallet_amount}})}))}catch(e){return s.status(500).json({message:e?.message})}})),e.all("*",((e,s)=>s.status(400).json({message:"invalid request"})))};export{e as default};
